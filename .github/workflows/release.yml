name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Extract version from tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Build project
      run: ./gradlew build -x test --no-daemon
      
    - name: Run tests
      run: ./gradlew test --no-daemon
      
    - name: Build JAR
      run: ./gradlew bootJar --no-daemon
      
    - name: Get JAR name
      id: jar
      run: |
        JAR_FILE=$(ls build/libs/*.jar | head -n 1)
        echo "JAR_PATH=$JAR_FILE" >> $GITHUB_OUTPUT
        echo "JAR_NAME=$(basename $JAR_FILE)" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## Raft Implementation Release ${{ steps.version.outputs.VERSION }}
          
          ### Features
          - Raft consensus algorithm implementation
          - gRPC communication between nodes
          - Web dashboard for cluster management
          - REST API for commands and status
          - Node management (start/stop)
          - Event logging and monitoring
          
          ### Artifacts
          - `${{ steps.jar.outputs.JAR_NAME }}` - Executable JAR file
          
          ### How to Run
          ```bash
          # Start Node 1
          java -jar ${{ steps.jar.outputs.JAR_NAME }} --spring.profiles.active=node1
          
          # Start Node 2 (in another terminal)
          java -jar ${{ steps.jar.outputs.JAR_NAME }} --spring.profiles.active=node2
          
          # Start Node 3 (in another terminal)
          java -jar ${{ steps.jar.outputs.JAR_NAME }} --spring.profiles.active=node3
          
          # Open Dashboard
          Open http://localhost:8081 in your browser
          ```
          
          ### Documentation
          - README.md - Main documentation
          - SCHNELLSTART.md - Quick start guide
          - TROUBLESHOOTING.md - Problem solving
          
        files: |
          ${{ steps.jar.outputs.JAR_PATH }}
          README.md
          SCHNELLSTART.md
          TROUBLESHOOTING.md
          FIXES-ZUSAMMENFASSUNG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
